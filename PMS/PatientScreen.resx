<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="guna2ImageButton1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>